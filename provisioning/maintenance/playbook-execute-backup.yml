---
- hosts: minecraftgameserver
  vars_files:
    - ./../vars/facts_mc_node.yml
  become: true
  vars:
    password_store_paths:
      RESTIC_REPO_PASSWORD_PATH: internet/backblaze.com/nolte07@gmail.com/buckets/mcbackup-worlddata/restic
      B2_ACCOUNT_ID_PATH: "internet/backblaze.com/nolte07@gmail.com/appuser/mcbackup/keyid"
      B2_ACCOUNT_KEY_PATH: "internet/backblaze.com/nolte07@gmail.com/appuser/mcbackup/token"
  tasks:
    - name: Basic lookup. Fails if backblaze secrects doesn't exist
      set_fact:
        RESTIC_REPO_PASSWORD: "{{ lookup('passwordstore', password_store_paths.RESTIC_REPO_PASSWORD_PATH ,convert_data=False) |string}}"
        B2_ACCOUNT_ID: "{{ lookup('passwordstore', password_store_paths.B2_ACCOUNT_ID_PATH ,convert_data=False) |string}}"
        B2_ACCOUNT_KEY: "{{ lookup('passwordstore', password_store_paths.B2_ACCOUNT_KEY_PATH ,convert_data=False) | b64encode |string}}"
      delegate_to: localhost
      when:
        backup_destination is defined and
        backup_destination == 'backblaze'

    - name: stop spigot
      service:
        name: spigot
        state: stopped
      notify: restart spigot


    - debug:
        msg: "{{ lookup('template', playbook_dir+'/roles/backup/templates/restic-tasks-parameter.yml.j2' ,template_vars=dict(backup=backup_loop,backup_dest=backup_destination)) }}"
      with_items: "{{ backup_dirs }}"
      loop_control:
        loop_var: backup_loop
        
    - name: start the restic backup process
      include_role:
        name: backup
      vars:
        backup: "{{ ( lookup('template', playbook_dir+'/roles/backup/templates/restic-tasks-parameter.yml.j2' ,template_vars=dict(backup=backup_loop,backup_dest=backup_destination)) | from_yaml ) }}"
      with_items: "{{ backup_dirs }}"
      loop_control:
        loop_var: backup_loop

  handlers:
    - name: restart spigot
      service:
        name: spigot
        state: restarted
